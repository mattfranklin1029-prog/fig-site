name: Deploy FIG site to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: fig-web-deploy
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      WEBAPP_NAME: fig-web

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Clean install (dev + build tools available here)
      - name: Install deps
        run: npm ci

      # Build assets (run both if present; ignore if missing)
      - name: Build
        run: |
          npm run tw:build --if-present || true
          npm run build --if-present || true

      # Strip to production-only deps and block postinstall
      - name: Prune to production deps
        run: |
          rm -rf node_modules
          npm ci --omit=dev --ignore-scripts

      # Create a lean deployment zip
      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . \
            -x ".git/*" ".github/*" ".vscode/*" \
               "tests/*" "docs/*" "**/*.log" "**/*.md" \
               "node_modules/.cache/*" ".DS_Store" ".env*"

      # (Optional) upload artifact for debugging
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fig-web-release
          path: release.zip
          if-no-files-found: error

      # Deploy with retries to dodge transient 409 conflicts
      - name: Deploy to Azure Web App (try 1)
        id: deploy1
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: release.zip
        continue-on-error: true

      - name: Wait before retry
        if: steps.deploy1.outcome == 'failure'
        run: sleep 20

      - name: Deploy to Azure Web App (try 2)
        id: deploy2
        if: steps.deploy1.outcome == 'failure'
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: release.zip
        continue-on-error: true

      - name: Wait before final retry
        if: steps.deploy2.outcome == 'failure'
        run: sleep 30

      - name: Deploy to Azure Web App (try 3)
        id: deploy3
        if: steps.deploy2.outcome == 'failure'
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: release.zip

      # Health check (only if any deploy succeeded)
      - name: Verify health
        if: |
          steps.deploy1.outcome == 'success' || 
          steps.deploy2.outcome == 'success' || 
          steps.deploy3.outcome == 'success'
        run: |
          curl -fsS https://${{ env.WEBAPP_NAME }}.azurewebsites.net/_health || \
          curl -fsS https://${{ env.WEBAPP_NAME }}.azurewebsites.net/healthz

      # Fail if all retries failed
      - name: Fail if deploy still failing
        if: |
          steps.deploy1.outcome == 'failure' && 
          steps.deploy2.outcome == 'failure' && 
          steps.deploy3.outcome == 'failure'
        run: |
          echo "Deployment failed after 3 attempts (likely lock/another deployment)."
          exit 1
